
# DAESOON LOCAL
#spring.datasource.url = jdbc:mysql://localhost:3306/mosaic
#spring.datasource.username = root
#spring.datasource.password = eotns0622!
#
#appHost = "localhost"
#appPort = "8080"

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)

# on RDS
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://${RdsEndpoint}:3306/Mosaic_DB_Dev
spring.datasource.username = ${RdsUser}
spring.datasource.password = ${RdsPassword}
        
## Hibernate Properties

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

## Gmail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=angointeam
spring.mail.password=dksrhdlsxla
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.jackson.serialization.fail-on-empty-beans=false

#AWS S3

# AWS S3 bucket의 정보
cloud.aws.s3.bucket=angointeam-s3
cloud.aws.region.static=ap-northeast-2

# AWS local 환경에서 사용정보(환경변수로 처리)
cloud.aws.credentials.accessKey=${AwsAccessKey}
cloud.aws.credentials.secretKey=${AwsSecretKey}

#AWS ec2 환경에서 사용정보
#cloud.aws.stack.auto=false
#cloud.aws.credentials.instanceProfile=true

#AWS HOST
appHost = "ec2-13-209-57-250.ap-northeast-2.compute.amazonaws.com"
appPort = "8080"


#spring.jpa.hibernate.use-new-id-generator-mappings=false
